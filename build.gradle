plugins {
    id 'java'
    id 'jacoco-report-aggregation'
    alias libs.plugins.sonarqube
    alias libs.plugins.spring.boot apply false
}

group = 'es.pedrazamiguez.starwarswebapp'
version = '0.0.1-SNAPSHOT'
description = 'A web application displaying characters and starships from Star Wars'

subprojects {
    apply plugin: 'java'

    group = rootProject.group
    version = rootProject.version

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    if (project.name != 'star-wars-webapp-domain') {
        apply plugin: 'jacoco'

        jacoco {
            toolVersion = libs.versions.jacoco.get()
        }

        tasks.test {
            useJUnitPlatform()
            finalizedBy jacocoTestReport
        }

        tasks.jacocoTestReport {
            reports {
                xml.required = true
                html.required = true
            }
        }
    }
}

dependencies {
    jacocoAggregation project(':star-wars-webapp-application')
    jacocoAggregation project(':star-wars-webapp-presentation')
    jacocoAggregation project(':star-wars-webapp-infrastructure:star-wars-webapp-api-client')
    jacocoAggregation project(':star-wars-webapp-boot')
}

reporting {
    reports {
        testCodeCoverageReport(JacocoCoverageReport)
    }
}

sonar {
    properties {
        property 'sonar.projectKey', 'StarWarsWebApp'
        property 'sonar.exclusions', '**/config/**,**/entity/**,**/model/**,**/dto/**,**/exception/**,**/*Application.java'
    }
}

tasks.sonar.dependsOn 'test', 'testCodeCoverageReport'

configure([project(':star-wars-webapp-application'),
           project(':star-wars-webapp-presentation'),
           project(':star-wars-webapp-infrastructure:star-wars-webapp-api-client')]) {

    dependencies {
        implementation platform(libs.spring.boot.bom)

        compileOnly libs.lombok
        annotationProcessor libs.lombok
        implementation libs.mapstruct
        annotationProcessor libs.mapstruct.processor

        testImplementation platform(libs.junit.bom)
        testImplementation libs.junit.jupiter
        testRuntimeOnly libs.junit.platform.launcher

        testImplementation libs.mockito.core
        testImplementation libs.mockito.junit
        testImplementation libs.instancio
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }
}

configure([project(':star-wars-webapp-boot')]) {

    dependencies {
        implementation platform(libs.spring.boot.bom)
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }
}
