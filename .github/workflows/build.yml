name: Build and Analyze with SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Add swapi.dev certificate to JDK
        run: |
          sudo apt-get update && sudo apt-get install -y openssl
          echo | openssl s_client -connect swapi.dev:443 -servername swapi.dev 2>/dev/null | \
            openssl x509 -outform PEM > swapi.pem
          sudo keytool -importcert -noprompt -trustcacerts \
            -alias swapi -file swapi.pem \
            -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('build.gradle', 'settings.gradle') }}
          restore-keys: ${{ runner.os }}-sonar-

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('build.gradle', 'settings.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Build and analyze with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          ./gradlew build test testCodeCoverageReport sonar \
            -Dsonar.projectKey=Star-Wars-WebApp \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            --info --continue
